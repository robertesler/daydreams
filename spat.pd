#N canvas 573 71 776 654 12;
#X text 87 87 pgmmapping.txt is accessed via a number (e.g. 1 \, 2 \, 3);
#X text 87 137 this number corresponds to states in states.txt \; each state is read out 3 numbers at a time into the \; matrix display and to the spat controller (installationctrl).;
#X text 85 213 this number also corresponds to spat.txt \, which sends messages to a router that sends level info to the matrix~ object.;
#X text 91 34 The original spatializer uses three text files \, pgmmapping.txt \, states.txt \, and spat.txt. The max patch used the [coll] object to store the data.;
#X text 91 322 The original spat patch should be straightforward to recreate 1 to 1 from Max.;
#X obj 108 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 127 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 146 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 165 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 184 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 203 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 222 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 241 460 vradio 19 1 0 8 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 108 429 route 0 1 2 3 4 5 6 7, f 22;
#X obj 274 475 print matrix error;
#X msg 108 400 2 2;
#X msg 141 400 4 7;
#X msg 281 441 0;
#X text 313 439 reset;
#X text 103 374 Maybe this could work as a matrix display;
#N canvas 636 175 925 619 spat 0;
#X msg 38 92 read pgmmapping.txt;
#X msg 220 93 read states.txt;
#X obj 38 60 loadbang;
#X obj 157 238 r number;
#X obj 241 216 s number;
#X floatatom 241 190 5 0 0 0 - - - 0;
#N canvas 646 522 450 300 zl.iter 0;
#X obj 85 17 inlet;
#X obj 85 103 f;
#X obj 115 103 + 3;
#X floatatom 85 127 5 0 0 0 - - - 0;
#X obj 85 41 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 85 245 outlet;
#X obj 132 17 inlet;
#X obj 183 246 print;
#X obj 85 221 pack 0 3;
#X msg 108 71 0;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 8 0;
#X connect 4 0 1 0;
#X connect 6 0 9 0;
#X connect 8 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X restore 32 339 pd zl.iter 3;
#X obj 77 412 list store;
#X msg 32 369 get \$1 \$2;
#X obj 144 437 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 32 314 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 113 314 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 77 442 print;
#X msg 255 62 next 1;
#X msg 316 62 rewind;
#X obj 220 119 qlist;
#X obj 220 143 print states;
#X obj 38 120 qlist;
#X msg 114 46 next 1;
#X obj 38 144 print pgm;
#X msg 172 46 rewind;
#X obj 235 361 text;
#X obj 475 148 text define -k pgm;
#A set;
#X obj 623 145 text define -k states;
#A set;
#X connect 0 0 17 0;
#X connect 1 0 15 0;
#X connect 2 0 0 0;
#X connect 2 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 8 0;
#X connect 7 0 12 0;
#X connect 7 1 9 0;
#X connect 8 0 7 0;
#X connect 10 0 6 0;
#X connect 11 0 6 1;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 17 0;
#X connect 20 0 17 0;
#X restore 466 447 pd spat;
#X connect 13 0 5 0;
#X connect 13 1 6 0;
#X connect 13 2 7 0;
#X connect 13 3 8 0;
#X connect 13 4 9 0;
#X connect 13 5 10 0;
#X connect 13 6 11 0;
#X connect 13 7 12 0;
#X connect 13 8 14 0;
#X connect 15 0 13 0;
#X connect 16 0 13 0;
#X connect 17 0 12 0;
#X connect 17 0 11 0;
#X connect 17 0 10 0;
#X connect 17 0 9 0;
#X connect 17 0 8 0;
#X connect 17 0 7 0;
#X connect 17 0 6 0;
#X connect 17 0 5 0;
